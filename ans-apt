#!/bin/bash

# Shell Script that will auto-call ansible-playbook for me

# Copyright Â© 2017 JPCDI, JPartain89 and Justin Partain
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROGRAM_NAME="ans-apt"
PROGRAM_LOCATION="${DIR}/${PROGRAM_NAME}"
VERSION="3.0"

if [[ ! -e "$(command -v allunix)" ]]; then
  echo "AllUnix file is missing."
  wget -O - http://bit.ly/jp_allunix | bash
fi

. allunix

GEN_ANS="${DIR}/ansible"

no_sudo

function usage() {
cat << EOF
My personal shortcutting ansible stuffs!

ans-apt [-u | --update ] [ all | local ]
ans-apt [ -ma | -ml ] or [ --map-all | --map-local ]
EOF
EXIT_NORM
}

function help_text() {
cat <<- EOF
My personal shortcutting ansible stuffs!

ans-apt [-u | --update ] [ all | local ]
ans-apt [ -ma | -ml ] or [ --map-all | --map-local ]

Options:
    -u, --update  : Requires either [ all ] or [ local ]
          all:    : Updates all Managed Machines:
                  : - Apt, Homebrew and Pip
                  : - Runs (a version of) map-pull-sub from conffiles repo, outward
                  : (Local and Remote, macOS and Linux)
          local:  : Updates all Local Machines
                  : - Apt, Homebrew and Pip
                  : - Runs map-pull-sub from conffiles outward
                  : (Local Only, macOS and Linux)

    -ma, --map-all          : Runs map-pull-sub from conffiles outward
                            :   on all managed machines
    -ml, --map-local        : Runs map-pull-sub from conffiles outward
                            :   on all local machines

    -rl, --reboot-linux     : Reboots the Linux Machines
    -rv, --reboot-virtual   : Reboots all Virtual Machines

    -m,  --monit            : Reloads monit on all Managed Machines

There is not currently an option to shutdown all Managed Linux Machines

    -h,  --help             : this help
EOF
EXIT_NORM
}

trap 'usage; exit 1' SIGHUP SIGINT SIGTERM
trap 'EXIT_NORM' EXIT

[ -n "$1" ] || help_text exit 1

while [ $# -ge 1 ]; do
  case "$1" in
    -u | --update )
      shift
      [ -n "$1" ] || help_text exit 1
      while [ $# -ge 1 ]; do
        case "$1" in
          all )
            sec_separate;
            echo "Updating all Managed Machines";
            echo "First, the apt_basic playbook."
            ansible-playbook "${GEN_ANS}/apt_basic.yml";
            sec_separate;
            echo "Next, updating macOS Machines with the brew_basic playbook";
            ansible-playbook "${GEN_ANS}/brew_basic.yml";
            sec_separate;
            echo "Finally, running the map-pull-sub playbook."
            ansible-playbook "${GEN_ANS}/map-pull-sub.yml";
            exit 0
          ;;
          local )
            sec_separate;
            echo "Updating only Local Machines";
            echo "First, the apt_basic playbook.";
            ansible-playbook "${GEN_ANS}/apt_basic.yml" --limit=local-linux;
            sec_separate;
            echo "Next, updating macOS Machines with the brew_basic playbook";
            ansible-playbook "${GEN_ANS}/brew_basic.yml";
            sec_separate;
            echo "Finally, running the map-pull-sub playbook."
            ansible-playbook "${GEN_ANS}/map-pull-sub.yml" --limit=local;
            exit 0
          ;;
          * )
            help_text;
            exit 1
          ;;
        esac
      done
      shift
    ;;
    -ma | --map-all )
      sec_separate;
      echo "Running map-pull-sub from within conffiles repo";
      ansible-playbook "${GEN_ANS}/map-pull-sub.yml";
      exit 0
    ;;
    -ml | --map-local )
      sec_separate;
      echo "Running map-pull-sub from within conffiles repo";
      ansible-playbook "${GEN_ANS}/map-pull-sub.yml" --limit=local;
      exit 0
    ;;
    -rl | --reboot-linux )
      echo "";
      echo "Rebooting Linux Machines ";
      ansible-playbook  "${GEN_ANS}/restart.yml";
      exit 0
    ;;
    -rv | --reboot-virtual )
      echo "";
      echo "Rebooting only Virtual Machines ";
      ansible-playbook  "${GEN_ANS}/restart.yml" --limit=virtual;
      exit 0
    ;;
    -m | --monit )
      echo "";
      echo "Reloads monit on Linux Machines ";
      ansible  linux -s -m service -a 'name=monit state=reloaded';
      exit 0
    ;;
    -h | --help )
      help_text &&
      exit 0
    ;;
    * )
      help_text &&
      exit 1
    ;;
  esac
done
