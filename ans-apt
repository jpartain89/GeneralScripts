#!/bin/bash -e

# Shell Script that will auto-call my various ansible-playbooks for me

# Copyright Â© 2017 JPCDI, JPartain89 and Justin Partain
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROGRAM_NAME="ans-apt"
PROGRAM_LOCATION="${DIR}/${PROGRAM_NAME}"
VERSION="3.0"

# This is for the local ansible directory
genAnsible="${DIR}/ansible"

usage() {
cat << EOF
My personal shortcutting ansible stuffs!

ans-apt [-u | --update ] [ all | local ]
ans-apt [ -ma | -ml ] or [ --map-all | --map-local ]
EOF
}

help_text() {
cat <<- EOF
My personal shortcutting ansible stuffs!

ans-apt [-u | --update ] [ all | local ]
ans-apt [ -ma | -ml ] or [ --map-all | --map-local ]

Options:
    -u, --update  : Requires either [ all ] or [ local ]
          all:    : Updates all Managed Machines:
                  : - Apt, Homebrew and Pip
                  : - Runs (a version of) map-pull-sub from conffiles repo, outward
                  : (Local and Remote, macOS and Linux)
          local:  : Updates all Local Machines
                  : - Apt, Homebrew and Pip
                  : - Runs map-pull-sub from conffiles outward
                  : (Local Only, macOS and Linux)

    --pip                   : Runs pip-upgrade for all installed pip(\#) that
                            : are installed

    -ma, --map-all          : Runs map-pull-sub from conffiles outward
                            :   on all managed machines
    -ml, --map-local        : Runs map-pull-sub from conffiles outward
                            :   on all local machines

    -rl, --reboot-linux     : Reboots the Linux Machines
    -rv, --reboot-virtual   : Reboots all Virtual Machines

There is not currently an option to shutdown all Managed Linux Machines

    -h,  --help             : this help
EOF
}

trap 'usage; exit 1' SIGHUP SIGINT SIGTERM

[ -n "$1" ] || help_text && exit 1

while [ $# -ge 1 ]; do
    case "$1" in
        -u | --update )
            shift
            [ -n "$1" ] || help_text && exit 1
            while [ $# -ge 1 ]; do
                case "$1" in
                    all )
                        echo "Updating all Managed Machines";
                        echo "First, the apt_basic playbook.";
                        ansible-playbook "${genAnsible}/apt_basic.yml" &&
                        echo "Next, updating macOS Machines with the brew_basic playbook";
                        ansible-playbook "${genAnsible}/brew_basic.yml" &&
                        echo "Finally, running the git-autopull playbook.";
                        ansible-playbook "${genAnsible}/git-autopull.yml" &&
                        shift;
                        exit 0
                    ;;
                    local )
                        echo "Updating only Local Machines";
                        echo "First, the apt_basic playbook.";
                        ansible-playbook "${genAnsible}/apt_basic.yml" --limit=local-linux &&
                        echo "Next, updating macOS Machines with the brew_basic playbook";
                        ansible-playbook "${genAnsible}/brew_basic.yml" &&
                        echo "Finally, running the git-autopull playbook.";
                        ansible-playbook "${genAnsible}/git-autopull.yml" --limit=local &&
                        exit 0
                    ;;
                    linux )
                        echo "Updating Linux Machines";
                        echo "First, the apt_basic playbook.";
                        ansible-playbook "${genAnsible}/apt_basic.yml" --limit=local-linux &&
                        echo "Finally, running the git-autopull playbook.";
                        ansible-playbook "${genAnsible}/git-autopull.yml" --limit=local-linux &&
                        exit 0
                    ;;
                    * )
                        help_text;
                        exit 1
                    ;;
                esac
            done
            shift
        ;;
        --pip )
            echo "Running pip-upgrade.";
            ansible-playbook "${genAnsible}/pip-upgrade.yml" &&
            exit 0
        ;;
        -ma | --map-all )
            echo "Running git-autopull from within dotfiles repo.";
            ansible-playbook "${genAnsible}/git-autopull.yml" &&
            exit 0
        ;;
        -ml | --map-local )
            echo "Running git-autopull from within dotfiles repo";
            ansible-playbook "${genAnsible}/git-autopull.yml" --limit=local &&
            exit 0
        ;;
        -rl | --reboot-linux )
            echo "";
            echo "Rebooting Linux Machines ";
            ansible-playbook  "${genAnsible}/restart.yml" &&
            exit 0
        ;;
        -rv | --reboot-virtual )
            echo "";
            echo "Rebooting only Virtual Machines ";
            ansible-playbook  "${genAnsible}/restart.yml" --limit=virtual &&
            exit 0
        ;;
        -h | --help )
            help_text &&
            exit 0
        ;;
        * )
            help_text &&
            exit 1
        ;;
    esac
done
