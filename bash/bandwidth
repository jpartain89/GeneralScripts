#!/bin/bash -e

# Run speedtests against 3 servers and save all output results in CSV file for
# import to sqlite db run by cronjob once per hour
# from https://www.howtoforge.com/tutorial/how-to-use-speedtest-on-a-linux-server-to-check-store-and-report-internet-speeds-graphically/

speedTest=$(command -v speedtest)

RIGHTNOW="date --utc +%Y-%m-%dT%H:%M:%S"
serverOneNum="5023"
serverTwoNum="10386"
serverThreeNum="3501"

function getCSVString () {
    # if speedtest failed (e.g. it couldn't access a server) we need
    # to create a dummy zero entry for this time slot.

    # which server are we testing against?

	if [[ "$1" == "${serverOneNum}" ]]; then
		echo "5023,AT&T,\"Richardson, Tx\",$(eval "${RIGHTNOW}"),15.26,0.0,0.0,0.0"
	elif [[ "$1" == "${serverTwoNum}" ]]; then
		echo "10386,Speedtest.net,\"Dallas, Tx\",$(eval "${RIGHTNOW}"),17.39,0.0,0.0,0.0"
	elif [[ "$1" == "${serverThreeNum}" ]]; then
		echo "3501,Skybeam,\"Dallas, Tx\",$(eval "${RIGHTNOW}"),17.39,0.0,0.0,0.0"
	fi

    # test/debug case only
    if [[ "$1" == "199999999" ]]; then
        echo "99999,Test,Test,${RIGHTNOW},99.99,0.0,0.0,0.0"
    fi
}

function runTest () {
    # run speedtest against named server with csv output saved in tmp file

    "${speedTest}" --csv --server "$1" > /usr/local/etc/speedtest.tmp
    if  [ $? -gt -0 ]; then
        # speedtest failed so create a zero entry in place of any error message
        getCSVString "$1" > /usr/local/etc/speedtest.tmp
    fi

    cat /usr/local/etc/speedtest.tmp >> /usr/local/etc/speedtest.csv
}

cd /usr/local/etc

runTest "${serverOneNum}" && sleep 10
runTest "${serverTwoNum}" && sleep 10
runTest "${serverThreeNum}" && sleep 1

# now import the csv data in to sqlite db
sqlite3 -batch /usr/local/etc/bandwidth.db << EOF
.separator ","
.import /usr/local/etc/speedtest.csv bandwidth
EOF

# add current run csv to backup
cat /usr/local/etc/speedtest.csv >> /usr/local/etc/speedtest.bak
