#!/bin/bash -e

# Copyright Â© 2017-2018 JPCDI, JPartain89 and Justin Partain
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# program info
PROGRAM_NAME="yt-porn"
REPO_NAME="generalscripts"
VERSION="1.0.0"

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

die() {
    echo "$PROGRAM_NAME: $1" >&2
    exit "${2:-1}"
}

trap "die 'trap called'" SIGHUP SIGINT SIGTERM

help() {
    cat << EOF

Usage: yt-porn [ -f | --file ] [ arguments ]

    yt-porn is meant to download porn videos and automatically move them to the porn directory. (Moving feature not yet implemented)

    -f | --file :   This specifies that the videos you want downloaded are
                    saved inside a text file, each on their own lines

EOF
exit 1
}

command -v "$PROGRAM_NAME" 1>/dev/null 2>&1 || {
    (
        if [ -x "${DIR}/${PROGRAM_NAME}" ]; then
            sudo ln -svf "${DIR}/${PROGRAM_NAME}" "/usr/local/bin/${PROGRAM_NAME}"
            sudo chmod -R 0775 "/usr/local/bin/${PROGRAM_NAME}"
        else
            echo "For some reason, linking $PROGRAM_NAME to /usr/local/bin,"
            echo "failed. My apologies for not being able to figure it out..."
            exit 1
        fi
    )
}

YT_DL="$(command -v youtube-dl)"

test -x "${YT_DL}" || die "Looks like $PROGRAM_NAME is missing."

move() {
    unsorted=/media/2TB_APFS/Porn/Unsorted
    rsync -avhP --remove-source-files "${fileORIGINAL}" "${unsorted}/${fileNAME}"
}

file() {
    while IFS= read -r file; do
        for i in $file; do
            fileNAME=$("$YT_DL" "$i" --get-filename)
            fileORIGINAL="$i"
            "$YT_DL" "$i"
            if [[ $* == -m ]] | [[ $* == --move ]]; then
                move
            fi
        done
    done< <(cat "$2")
}

#single() {
#
#}

while [ $# -ge 1 ]; do
    case "$1" in
        -f | --file )
            file "$@"; shift;;
        -s | --single )
            single;;
        * )
            if [[ -f "$1" ]]; then
                file "$@"; shift;
            else
                die
            fi;;
    esac
done
