#!/bin/bash -e

# This builds monit with the --enable-optimized flag set.

if [[ $(uname -s) == 'Darwin' ]]; then
  echo "Sorry, this is made just for Debian-Based systems."
  echo "Will be changed in the future."
  exit 1
  #GIT_DIR=/Users/$(logname)/git
else
  GIT_DIR=/home/$(logname)/git
fi

if [[ ! -e "$GIT_DIR/myfunctions" ]]; then
  http://bit.ly/jp_allunix
  "$GIT_DIR/myfunctions"
fi

source allunix
no_sudo

MONIT_GIT="https://tildeslash@bitbucket.org/tildeslash/monit.git"
MONIT_DIR="$GIT_DIR/monit"
required_apps=(
  libtool \
  make \
  automake \
  autoconf \
  bison \
  build-essential \
  gcc-4.9 \
  gcc-4.9-base \
  gcc-4.9-source \
  flex \
  libpam0g-dev \
  libpam0g
)

clean_up () {
  # you have to run `sudo monit` once, especially if it successfully installed.
  sudo monit;
  sudo monit reload;
  exit "$?"
}

trap clean_up SIGHUP SIGINT SIGTERM

monit_git () {
  if [[ ! -e "$MONIT_DIR" ]]; then
    echo ""
    echo "Now cloning monit's git repo."
    echo "$MONIT_GIT"
    git clone "$MONIT_GIT" "$MONIT_DIR"
  else
    echo ""
    echo "Monit's git repo looks to be cloned, will try updating."
    ( git -C "$MONIT_DIR" reset --hard 2>&1 &&
    git -C "$MONIT_DIR"  pull 2>&1 ) ||
    echo "For some reason, ${MAGENTA}git reset --hard${NORMAL} and ${MAGENTA}git pull${NORMAL} commands failed
        to run, failing to update Monit's locally cloned git repo, found at
        $MONIT_DIR.
    Now exiting..."
    exit 1
  fi
}

install_apps () {
  sudo apt-get install "${required_apps[@]}" -y
}

monit_make () {
  cd "$MONIT_DIR" &&
  echo ""
  echo "${RED}Running git pull${NORMAL}"
  git pull &&
  echo ""
  echo "${RED}Running bootstrap.${NORMAL}"
  ./bootstrap &&
  echo ""
  echo "${RED}Running configure --enable-optimized.${NORMAL}"
  ./configure --enable-optimized &&
  echo ""
  echo "${RED}Running make.${NORMAL}"
  make &&
  echo ""
  echo "${RED}Run sudo make install.${NORMAL}"
  sudo make install
}

install_apps; monit_git; monit_make; clean_up "$@"
