#!/bin/bash -e

# ----------------------------------------------------------
# `Mysqldump` script, copied from https://sh.jpcdi.com/2x35HqO
# Multiple enhancements made from the original to now.
# Copyright Â© 2018 Justin Partain, JPCDI, https://jpcdi.com
# ----------------------------------------------------------
# This work is (still) licensed under a Creative Commons
# Attribution-ShareAlike 3.0 Unported License;
# see http://creativecommons.org/licenses/by-sa/3.0/
# for more information.
# ----------------------------------------------------------
# a simple mysql database backup script.
# version 2, updated March 26, 2011.
# copyright 2011 alvin alexander, http://alvinalexander.com
# ----------------------------------------------------------
# This work is licensed under a Creative Commons
# Attribution-ShareAlike 3.0 Unported License;
# see http://creativecommons.org/licenses/by-sa/3.0/
# for more information.
# ----------------------------------------------------------

# (1) set up all the mysqldump variables
FILE="$("$(date '+%Y%m%d')".dbDump.sql)"
DBSERVER=127.0.0.1
USER=
PASS=

[[ -r "$HOME/git/conffiles/mariadb/mariadb_backup.conf" ]] && \
    . "$HOME/git/conffiles/mariadb/mariadb_backup.conf"

trap ''

# (3) do the mysql database backup (dump)

# use this command for a database server on a separate host:
#mysqldump --opt --protocol=TCP --user=${USER} --password=${PASS} --host=${DBSERVER} ${DATABASE} > ${FILE}

# use this command for a database server on localhost. add other options if need be.
mysqldump --opt --user=${USER} --password=${PASS} > ${FILE}

# (4) gzip the mysql database dump file
gzip $FILE

# (5) show the user the result
echo "${FILE}.gz was created:"
ls -l ${FILE}.gz
