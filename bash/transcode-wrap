#!/usr/bin/env bash
set -e

#This is to call 'transcode-video' in batch-form

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

PROGRAM_NAME="transcode-wrap"
REPO_NAME="generalscripts"

PIPE="/tmp/${PROGRAM_NAME}.out"
mkfifo "${PIPE}"

# Start logging to journal
systemd-cat < "${PIPE}" &
sleep_pid=$(
  sleep 9999d > "${PIPE}" &  # keep pipe open
  echo ${!}   # but allow us to close it later...
)

TRANSCODE="$(command -v transcode-video)"
ANSI="$(command -v ansi)"

# My personal bash_functions repo
. /home/jpartain89/.config/functions/bash_functions
. "${ANSI}"

_link_install
_trap
#_logging
#_getopt_test

declare -a REQ_APPS=(
  "${TRANSCODE}"
  "${ANSI}"
)

for i in "${REQ_APPS[@]}"; do
  if [[ "${i}" == "" ]]; then
    echo "You don't have the necessary programs."
    echo "You need to install ${i}"
    exit 1
  fi
done

usage() {
  echo -e "${PROGRAM_NAME} [ -l | --location ] /foo/bar [ -e | --extension ] .bar
"
ansi::blueIntense --no-newlines "   -l | --location    " ; ansi::bgBlueIntense ": Sets the directory location for the files you are wanting trascoded."
ansi::blueIntense --no-newlines "   -e | --extension   " ; ansi::bgBlueIntense ": Sets the extension of the files you want transcoded"
echo -e ""
ansi::bgRedIntense --no-newlines "    NOTE:" ; ansi::RedIntense " Can only parse one at time for both items."
ansi::bgGreen "      This one is allowed:"
ansi::Red "        ${PROGRAM_NAME} -l /media/drive -e .mkv"
ansi::bgGreen "     This one is not:"
ansi::Red "       ${PROGRAM_NAME} -l /media/drive -l /some/other/spot -e .mkv,.avi"
}

main() {
  while IFS= read -r file; do
    for i in "${file}"; do

      # This assigns the substituted variable to the letter j
      j="${i%${EXT}}.mp4"

      if [[ ! -e "${j}" ]]; then
        transcode-video --quick --mp4 "${i}"
      fi

      unset j
    done;
  done< <(find "${LOCATION}" -iname "*${EXT}" -exec echo {} \;)
}

#SHORT=leh
#LONG=location,ext,help

#OPTS=$(${GETOPT} --options ${SHORT} --long ${LONG} --name "$0" -- "$@")

if [ "${#}" == 0 ] ; then
  _trap_die "Failed to parse options as there aren't any... exiting."
fi

#eval set -- "${OPTS}"

while (( "${#}" )); do
  case "${1}" in
    -l | --location )
      LOCATION="${2}";
      shift;
      ;;
    -e | --extension )
      EXT="${2}"
      [[ ${EXT} != .* ]] && EXT=".${EXT}"
      shift;
      ;;
    -h | --help )
      usage
      exit 0
      ;;
    -- )
      shift
      break
      ;;
    * ) # preserve positional arguments
      PARAMS="${PARAMS} ${1}"
      shift
      ;;
  esac
done

main

