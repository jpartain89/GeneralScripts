#!/usr/bin/env bash
set -e

#This is to call 'transcode-video' in batch-form

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROGRAM_NAME="transcode-wrap"
REPO_NAME="generalscripts"

die() {
    echo "${PROGRAM_NAME}: $1" >&2
    exit "${2:-1}"
}

GETOPT=$(command -v getopt)

# This "auto-installs" git-auto into /usr/local/bin for ya!
command -v "$PROGRAM_NAME" 1>/dev/null 2>&1 || {
  (
    if [ -x "${DIR}/${PROGRAM_NAME}" ]; then
      sudo ln -svf "${DIR}/${PROGRAM_NAME}" "/usr/local/bin/${PROGRAM_NAME}"
      sudo chmod -R 0775 "/usr/local/bin/${PROGRAM_NAME}"
    else
      echo "For some reason, linking $PROGRAM_NAME to /usr/local/bin,"
      echo "failed. My apologies for not being able to figure it out..."
      exit 1
    fi
  )
}

TRANSCODE="$(command -v transcode-video)"

if [[ "${TRANSCODE}" == "" ]]; then
  echo "You don't have the necessary program."
  echo "You need to install ${TRANSCODE}"
  exit 1
fi

usage() {
  cat << EOF
$PROGRAM_NAME [ -l | --location ] /foo/bar [ -e | --extension ] .bar

    - l | --location    : Sets the directory location for the files you are
                          wanting trascoded.
    -e | --extension    : Sets the extension of the files you want transcoded

                  Can only parse one at time for both items
EOF
}

main() {
  while IFS= read -r file; do
    for i in "$file"; do
      #cd $(dirname "$i") &&
      transcode-video --quick --mp4 "$i" \
        "${i%${EXT}}mp4" &&
      #cd "${DIR}";
    done;
  done< <(find "${LOCATION}" -iname "*.${EXT}" -exec echo {} \;)
}

#SHORT=leh
#LONG=location,ext,help

#OPTS=$(${GETOPT} --options ${SHORT} --long ${LONG} --name "$0" -- "$@")

if [ $? != 0 ] ; then
  die "Failed to parse options...exiting." >&2
fi

#eval set -- "${OPTS}"

while (( "$#" )); do
  case "$1" in
    -l | --location )
      LOCATION="${2}";
      shift;
      ;;
    -e | --extension )
      EXT="${2}"
      shift;
      ;;
    -h | --help )
      usage
      exit 0
      ;;
    -- )
      shift
      break
      ;;
    * ) # preserve positional arguments
      PARAMS="$PARAMS $1"
      shift
      ;;
  esac
done

main
